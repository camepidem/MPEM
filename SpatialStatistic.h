//SpatialStatistic.h

#ifndef SPATIALSTATISTIC_H
#define SPATIALSTATISTIC_H 1

#include "Raster.h"

class TargetData {

public:

	TargetData(std::string id, const Raster<int> data) : id(id), data(data) {};

	//ID must be unique for each unique data raster
	//TODO: this should be automatically generated by something clever like a hash of the raster, not manually specified
	const std::string id;
	const Raster<int> data;
};

class SpatialStatistic {

public:

	SpatialStatistic();
	virtual ~SpatialStatistic();

	virtual int setup(std::vector<TargetData*> data) = 0;

	virtual int reset() = 0;

	virtual int getStats(double tNow, TargetData data, const Raster<int> *simulationState);

	virtual std::map<std::string, double> calculateStats(double tNow, TargetData data, const Raster<int> *simulationState) = 0;

	virtual std::vector<std::string> statsHeader() = 0;

	virtual void writeStatsToFile(std::map<std::string, double> stats);

	virtual void setupFile() = 0;

	FILE *pStatFile;
	int enabled;

};

#endif